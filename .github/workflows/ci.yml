name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  coding-standards:
    name: Coding Standards
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: "${{ matrix.php-version }}"
          tools: cs2pr

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: Install dependencies with composer
        run: composer install --no-interaction --no-progress --no-suggest

      - name: Run PHP_CodeSniffer
        run: vendor/bin/phpcs -q --no-colors --report=checkstyle | cs2pr

  psalm:
    name: Psalm
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: "${{ matrix.php-version }}"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: Install dependencies with composer
        run: composer install --no-interaction --no-progress --no-suggest

      - name: Run Psalm
        run: vendor/bin/psalm --shepherd --output-format=github --threads=4

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          php-version: "${{ matrix.php-version }}"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: Install dependencies with composer
        run: composer install --no-interaction --no-progress --no-suggest

      - name: Run PHPUnit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v1

  infection:
    name: Infection
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          php-version: "${{ matrix.php-version }}"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: Install dependencies with composer
        run: composer install --no-interaction --no-progress --no-suggest

      - name: Run Infection
        run: vendor/bin/infection

  heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - coding-standards
      - psalm
      - phpunit
      - infection
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_app_name: kremhrust
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
